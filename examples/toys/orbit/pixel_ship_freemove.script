local mouse_helper = require("defrs.utils.mouse_helper")

function init(self)
	-- Add initialization code here
	-- Remove this function if not needed
	self.impulse = vmath.vector3(0.0,0.0,0.0)
	msg.post(".", "acquire_input_focus")
	
	self.sun_position = go.get_position("sun")
	self.exhaust_playing = false
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	if self.exhaust_playing == false then
		particlefx.play("/exhaust#particlefx")
		self.exhaust_playing = true
	end	
	if self.key_pressed == false then 
		particlefx.stop("/exhaust#particlefx")
		self.exhaust_playing = false 
	end	
	
	self.position = go.get_position()
	
	self.impulse.x = math.min(self.impulse.x, 10)
	self.impulse.y = math.min(self.impulse.y, 10)
	
	self.look_at = (math.deg(math.atan2(self.position.x - mouse_helper.mouse_x, self.position.y - mouse_helper.mouse_y)))
	
	go.set(".", "euler.z", self.look_at * -1 - 90)
	go.set_position(go.get_position() + self.impulse)
	
	if self.position.x < 0 - 100 then
		self.position.x = self.position.x + 1600 + 200
		go.set_position(self.position)
	end
	if self.position.x > 1600 + 100 then
		self.position.x = self.position.x - 1600 - 200
		go.set_position(self.position)		
	end
	if self.position.y < 0 - 100 then
		self.position.y = self.position.y + 800 + 200
		go.set_position(self.position)
	end
	if self.position.y > 800 + 100 then
		self.position.y = self.position.y - 800 - 200
		go.set_position(self.position)		
	end
	
	if self.impulse.x > 0 then self.impulse.x = self.impulse.x - 0.001 end
	if self.impulse.x < 0 then self.impulse.x = self.impulse.x + 0.001 end
	if self.impulse.y > 0 then self.impulse.y = self.impulse.y - 0.001 end
	if self.impulse.y < 0 then self.impulse.y = self.impulse.y + 0.001 end
	
	-- (x2-x1,y2-y1)
	-- vn(x/Length(v), y/length(v))
	
	local sun_direction = vmath.vector3(self.sun_position.x - self.position.x, self.sun_position.y - self.position.y, 0.0)
	--pprint("sun direction " .. sun_direction)
	local sun_impulse = vmath.vector3(sun_direction.x / vmath.length(sun_direction), sun_direction.y / vmath.length(sun_direction), 0.0) * 0.2
	--pprint("sun impulse " .. sun_impulse)
	self.impulse = self.impulse + sun_impulse
	
	self.key_pressed = false
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- todo add acceleration when holding down keys
	
	
	if action_id == hash("w") then
		self.impulse = self.impulse + vmath.vector3(0.0, 0.25, 0.0)
		self.key_pressed = true
	end
	if action_id == hash("a") then
		self.impulse = self.impulse + vmath.vector3(-0.25, 0.0, 0.0)
		self.key_pressed = true		
	end
	if action_id == hash("s") then
		self.impulse = self.impulse + vmath.vector3(0.0, -0.25, 0.0)
		self.key_pressed = true		
	end
	if action_id == hash("d") then
		self.impulse = self.impulse + vmath.vector3(0.25, 0.0, 0.0)
		self.key_pressed = true		
	end
	

	--if self.key_pressed == false then particlefx.play("/exhaust#particlefx") end
	--pprint(self.impulse)
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
