-- colors 1-14 are light colors
-- colors 15-30 are dark colors



go.property("seed",0)

local rng = require("defrs.utils.rng")

function purge_bad_rng()
	rng.random(); rng.random(); rng.random()
	-- we do this every time for each step to remove the initial bad RNG Lua can have
	-- otherwise you may get the same result every step...!!!
end

function clear_tilemap(color)
	for i = 1, 5, 1 do
		for j = 1, 5, 1 do
			tilemap.set_tile("#tilemap", "layer1", i, j, color)
		end
	end	
end

function set_foreground(color)
	for i = 1, 3, 1 do
		for j = 1, 5, 1 do
			if rng.random(0, 1) == 1 then
				tilemap.set_tile("#tilemap", "layer1", i, j, color)
				if i == 1 then
					tilemap.set_tile("#tilemap", "layer1", 5, j, color)
				elseif i == 2 then
					tilemap.set_tile("#tilemap", "layer1", 4, j, color)
				end
			end
		end
	end
end

function set_foreground_seeded(color, step, seed)
	for i = 1, 3, 1 do
		for j = 1, 5, 1 do
			local flag = rng.random(0, 1)
			if flag == 1 then
				tilemap.set_tile("#tilemap", "layer1", i, j, color)
				if i == 1 then
					tilemap.set_tile("#tilemap", "layer1", 5, j, color)
				elseif i == 2 then
					tilemap.set_tile("#tilemap", "layer1", 4, j, color)
				end
			end
			step = step + 1; rng.randomseed(seed + step); purge_bad_rng()
		end
	end
end


function randomize_tiles()
	background_color = rng.random(1, 14)
	clear_tilemap(background_color)
	foreground_color = rng.random(15, 30)
	set_foreground(foreground_color)	
end

function randomize_tiles_seeded(seed)
	local step = 0
	rng.randomseed(seed + step)
	background_color = rng.random(1, 14); step = step + 1; rng.randomseed(seed + step); purge_bad_rng()
	clear_tilemap(background_color)
	foreground_color = rng.random(15, 30); step = step + 1; rng.randomseed(seed + step); purge_bad_rng()
	set_foreground_seeded(foreground_color, step, seed)
	rng.setup_rng() -- when done make sure we reset the Random Number Generator so that it's OS based random
end

function init(self)
	if self.seed == 0.0 then
		randomize_tiles()
	else
		randomize_tiles_seeded(self.seed)
	end
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("randomize_tiles") then
		randomize_tiles()
	end
end

function on_input(self, action_id, action)

end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
